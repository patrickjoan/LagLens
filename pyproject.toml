[project]
name = "laglens"
version = "0.1.0"
description = "TUI world latency monitor"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "ping3>=4.0.8",
    "pyproj>=3.7.1",
    "pytest>=8.4.1",
    "rtree>=1.4.0",
    "shapely>=2.1.1",
    "textual>=5.0.0",
]

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "ruff>=0.12.5",
    "pre-commit>=4.0.0",
    "deptry>=0.20.0",
    "mkdocs>=1.6.0",
    "pytest-cov>=5.0.0",
]

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
  "E",    # pycodestyle errors
  "W",    # pycodestyle warnings
  "F",    # Pyflakes
  "I",    # Isort
  "C",    # Complexity
  "N",    # Naming conventions
  "UP",   # Pyupgrade
  "B",    # Bugbear
  "SIM",  # Simplifiable
  "A",    # Builtin shadowing
  "PERF", # Perflint
]
ignore = [
  "D100", # Missing docstring in public module (if you prefer not to require module docstrings initially)
  "D104", # Missing docstring in public package (for __init__.py)
  "D105", # Missing docstring in magic method
  "D203", # 1 blank line required before class docstring
  "D211", # No blank lines allowed before class docstring
  "D212", # Multi-line docstring summary should start at the first line
  "D213", # Multi-line docstring summary should start at the second line
  "D401", # First line of docstring should be in imperative mood
  "E501", # Line too long (we'll handle this with formatter)
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
ignore_missing_imports = true
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
exclude = ["venv/", ".venv/", "build/", "dist/"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.pytest.ini_options]
testpaths = ["src/tests"]
pythonpath = ["src"]
